@model IEnumerable<Claim>

<link rel="stylesheet" href="~/css/miar_article.css"/>
<link rel="stylesheet" href="~/css/miar_machine.css"/>
<link rel="stylesheet" href="~/css/miar_machine.display.css"/>


<div class="table-agile-info">
    <div class="panel panel-default">
        <div class="panel-heading">
            <div id="div_backButton" style="float:right" hidden>
                <button id="btn_back" type="button" class="btn">
                    <img src="~/images/close.png" alt="close"/>
                </button>
            </div>
            <div id="div_panelTitle"></div>
        </div>
        <div class="panel-body">
            <div id="div_article_update" class="div_articleDetails" hidden>
                @*machine image and video*@
                <div style="text-align:center">
                    <video id="vid_machine" hidden>
                        <source id="src_machine"/>
                    </video>
                    @*message label*@
                    <div style="margin:30px 0px" hidden>
                        <spn id="spn_fileStatus"></spn>
                    </div>
                </div>
                <div style="text-align:center">
                    <button id="btn_showImage" type="button" style="color:yellow" class="btn btn_imageAndVideo"></button>
                    <button id="btn_showVideo" type="button" class="btn btn_imageAndVideo"></button>
                </div>
                
                <form>
                    <div id="div_form" class="form-horizontal bucket-form"> 
                        @{
                            #region add image, video and pdf inputs
                            var fileInputInfos = new string[][]
                            {
                                new string[] { "div_imageInput", "inpt_chooseImage",  "inpt_image", "image/*"},
                                new string[] { "div_videoInput", "inpt_chooseVideo",  "inpt_video",  "video/*"},
                                new string[] { "div_pdfInput", "inpt_choosePdf",  "inpt_pdf",  "application/pdf"}
                            };

                            foreach(var fileInputInput in fileInputInfos)
                            {
                                <div id="@fileInputInput[0]" class="form-group">
                                    <label class="col-sm-3 control-label"></label>
                                    <div class="col-sm-6">
                                        <input id="@fileInputInput[1]"  type="text"  class="form-control  form_file_input"  readonly/>
                                        <span id="spn_help_@fileInputInput[1]" class="help-block"></span>
                                        <div hidden>
                                            <input id="@fileInputInput[2]"  type="file"  class=""  accept="@fileInputInput[3]">
                                        </div>
                                    </div>
                                </div>
                            }
                            #endregion
                        }
                        @{
                            #region add mainCategory and subCategory select
                            var selectTypes = new string[] { "mainCategory", "subCategory"};

                            foreach(var selectType in selectTypes)
                            {
                                <div id="div_@selectType" class="form-group">
                                    <label class="col-sm-3 control-label"></label>
                                    <div class="col-sm-6">
                                        <select id="slct_@selectType" class="form-control m-bot15"></select>
                                        <span id="spn_help_slct_@selectType" class="help-block"></span>
                                    </div>
                                </div>
                            }
                            #endregion
                        }
                        <div id="div_@formElementInfos[row, 0]" class="form-group">
                            <label class="col-sm-3 control-label"></label>
                            <div class="col-sm-6">
                                <input id="inpt_@formElementInfos[row, 0]" type="@formElementInfos[row, 1]" class="form-control" required>
                                <span id="spn_help_inpt_@formElementInfos[row, 0]" class="help-block"></span>
                            </div>
                        </div>
                        @*handStatus*@
                        <div id="div_handStatus" class="form-group">
                            <label class="col-sm-3 control-label"></label>
                            <div class="col-sm-6">
                                <div class="radio">
                                    <label style="margin-right:10px">
                                        <input type="radio" name="handStatus">
                                    </label>
                                    <label>
                                        <input type="radio" name="handStatus">
                                    </label>
                                </div>
                            </div>
                        </div>
                        @*description*@
                        <div id="div_descriptions" class="form-group">
                            <label class="col-sm-3 control-label">
                                <div class="input-group m-bot15">
                                    <div class="input-group-btn">
                                        <button id="btn_descriptions" style="background-color:darkblue; color:red" tabindex="-1" class="btn btn-info" type="button">
                                            <b></b>
                                        </button>
                                        <button tabindex="-1" style="background-color: darkblue;" data-toggle="dropdown" class="btn btn-info dropdown-toggle" type="button">
                                            <span class="caret"></span>
                                        </button>
                                        <ul id="ul_descriptions"  role="menu" class="dropdown-menu pull-right" style="text-align:center">
                                        </ul>
                                    </div>
                                </div>
                            </label>
                            <div class="col-sm-6">
                                <textarea id="txt_descriptions"  style="resize:none"  type="text"  class="form-control"  rows="10"  required></textarea>
                            </div>
                        </div>
                    </div>
                </form>

                @*save button*@
                <div style="text-align:center">
                    <button id="btn_save" type="submit" class="btn btn-danger" style="background-color: darkblue"></button>
                    <div>
                        <span id="spn_resultLabel"></span>
                        <img id="img_loading" src="~/images/loading.gif" style="width:40px; height:40px" hidden/>
                    </div>
                </div>
            </div>
            <div id="div_article_display">
                @*menubar*@
                <div class="row w3-res-tb"  style="padding-top:10px">
                    <div class="col-sm-5 m-b-xs">
				        <select id="slct_menubar" class="input-sm form-control w-sm inline v-middle" style="float:left"></select>
                        <div id="div_menubar_button" hidden>
                            <button id="btn_menubar_apply" class="btn btn-sm btn_menubar_apply "></button>
                        </div>
				        
                    </div>
                    <div class="col-sm-4">
                    </div>
			        @*search bar*@
			        @*<div class="col-sm-3">
				        <div class="input-group">
					        <input type="text" class="input-sm form-control" placeholder="Ara">
					        <span class="input-group-btn">
						        <button class="btn btn-sm btn-default" type="button">
							        Ara
						        </button>
					        </span>
				        </div>
			        </div>*@
			        @*/search bar*@
		        </div>

                @*machine articles*@
                <div id="div_articles" class="div_articles">
                </div>

                @*entity count and pagination buttons*@
                <footer class="panel-footer">
                    <div class="row">
                        <div class="col-sm-5 text-left">
                            <small id="small_entityQuantity" class="text-muted inline m-t-sm m-b-s">
					        </small>
                        </div>
                        <div class="col-sm-7 text-right text-center-xs">                
                            <ul id="ul_pagination" class="pagination pagination-sm m-t-rowNone m-b-rowNone">
                            </ul>
                        </div>
                    </div>
                </footer>
            </div>
        </div>
    </div>
</div>


<script>
    const claimInfos = {
        "firstName": "@Html.Raw(Model.FirstOrDefault(c => c.Type.Equals(ClaimTypes.Name)).Value)",
        "lastName": "@Html.Raw(Model.FirstOrDefault(c => c.Type.Equals(ClaimTypes.Surname)).Value)",
        "telNo": "@Html.Raw(Model.FirstOrDefault(c => c.Type.Equals(ClaimTypes.MobilePhone)).Value)",
        "email": "@Html.Raw(Model.FirstOrDefault(c => c.Type.Equals(ClaimTypes.Email)).Value)",
        "companyName": "@Html.Raw(Model.FirstOrDefault(c => c.Type.Equals("CompanyName")).Value)",
        "roleNames": "@Html.Raw(Model.FirstOrDefault(c => c.Type.Equals(ClaimTypes.Role)).Value)",
        "roleLanguage": ""  // it will be add in "machine_display.js"
    };
    const langPack_entityQuantity = {
        "TR": "makine gösteriliyor",
        "EN": "machine displaying"
    };
    const updateButtonNameByLanguages = {
        "TR": "Güncelle",
        "EN": "Update"
    };
    const description_baseButtonNameByLanguages = {
        "TR": "Açıklama",
        "EN": "Description"
    };
    const pdfButtonNameByLanguages = {
        "TR": "PDF değiştir",        
        "EN": "Change PDF"
    }
    const machineImageButtonNameByLanguages = {
        "TR": "Resim Değiştir",
        "EN": "Change Image"
    }
    const playImageAltAndTitleByLanguages = {
        "TR": "Oynat",
        "EN": "Play"
    }
    const successMessagesByLanguages = {
        "TR": {
            "successfulUpdate": "başarıyla güncellendi",
        },
        "EN": {
            "successfulUpdate": "updated successfully",
        }
    }
    const errorMessagesByLanguages = {
        "TR": {
            "unsuccessfulInfosUpdating": "bilgiler güncellenirken bir hata oluştu",
            "unsuccessfulImageUpdating": "resim güncellenirken bir hata oluştu",
            "unsuccessfulVideoUpdating": "video güncellenirken bir hata oluştu",
            "unsuccessfulPdfUpdating": "pdf güncellenirken bir hata oluştu",
            "imageSizeOverflow": "resim boyutu en fazla 20mb olabilir",
            "videoSizeOverflow": "video boyutu en fazla 20mb olabilir",
            "pdfSizeOverflow": "pdf boyutu en fazla 20mb olabilir"
        },
        "EN":{
            "unsuccessfulInfosUpdating": "an error occured when informations updating",
            "unsuccessfulImageUpdating": "an error occured when image updating",
            "unsuccessfulVideoUpdating": "an error occured when video updating",
            "unsuccessfulPdfUpdating": "an error occured when pdf updating",
            "imageSizeOverflow": "image size can be max 20mb",
            "videoSizeOverflow": "video size can be max 20mb",
            "pdfSizeOverflow": "pdf size can be max 20mb"
        }
    }
    let article_idsAndMachineInfos = {};  // id == article Id
    let slct_menubar_value = "display";

    const path_imageFolderAfterWwwroot = "images\\machines";
    const path_videoFolderAfterWwwroot = "videos\\machines";
    const path_pdfFolderAfterWwwroot = "pdfs";   
    const css_imageAndVideoButtons_checked = {
        "color": "yellow",
        "background-color": "darkblue",
        "font-weight": "bolder"
    };
    const langPack_panelTitle = {
        "TR": "KAYITLI MAKİNELER",
        "EN": "REGISTERED MACHINES"
    };
    const langPack_menubarOptions = {
        "TR": [
            "Görüntüle",
            "Sil"
        ],
        "EN": [
            "Display",
            "Delete"
        ]
    };
    const langPack_applyButton = {
        "TR": "Uygula",
        "EN": "Apply"
    };
    const langPack_imageAndVideoButtons = {
        "TR": {
            "image": "Resim",
            "video": "Video"
        },
        "EN": {
            "image": "Image",
            "video": "Video"
        }
    }
    const langPack_formElementNames = {
        "TR": {
            "imageInput": "Resim",
            "videoInput": "Video",
            "pdfInput": "Pdf",
            "mainCategory": "Kategori",
            "subCategory": "Alt Kategori",
            "model": "Model",
            "brand": "Marka",
            "year": "Yıl",
            "stock": "Stok Adedi",
            "sold": "Satılan",
            "rented": "Kiralanan",
            "handStatus": {
                "name": "El Durumu",
                "radioL": "Sıfır",
                "radioR": "İkinci El"
            },
            "descriptions": "Açıklama"
        },
        "EN": {
            "imageInput": "Image",
            "videoInput": "Video",
            "pdfInput": "Pdf",
            "mainCategory": "Category",
            "subCategory": "Subcategory",
            "model": "Model",
            "brand": "Brand",
            "year": "Year",
            "stock": "Stock",
            "sold": "Sold",
            "rented": "Rented",
            "handStatus": {
                "name": "Hand Status",
                "radioL": "Zero",
                "radioR": "Second Hand"
            },
            "descriptions": "Description"
        },
    }
    const langPack_saveButton = {
        "TR": "KAYDET",
        "EN": "SAVE"
    }
    let selectedImageInfos;
    let selectedPdfInfos;
    let selectedVideoInfos;

    // miar_machine_display.js + miar_machine.js
    const vid_machine = $("#vid_machine");
    const src_machine = $("#src_machine");
    const spn_resultLabel_id = "spn_resultLabel";
    const spn_resultLabel = $("#" + spn_resultLabel_id);
    const spn_fileStatus = $("#spn_fileStatus");
    const btn_showImage = $("#btn_showImage");
    const btn_showVideo = $("#btn_showVideo");
    const btn_back = $("#btn_back");
    const inpt_image = $("#inpt_image");
    const inpt_video = $("#inpt_video");
    const inpt_pdf = $("#inpt_pdf");
    const inpt_chooseImage = $("#inpt_chooseImage");
    const inpt_chooseVideo = $("#inpt_chooseVideo");
    const inpt_choosePdf = $("#inpt_choosePdf");
    const img_loading = $("#img_loading");
    const div_backButton = $("#div_backButton");
    const div_panelTitle = $("#div_panelTitle");
    const imageSizeLimitInMb = 20;
    const videoSizeLimitInMb = 20;
    const pdfSizeLimitInMb = 20;
</script>


<script type="module" src="~/js/miar_machine.js"></script>
<script type="module" src="~/js/miar_machine.display.js"></script>
<script type="module" src="~/js/miar_descriptions.js"></script>

