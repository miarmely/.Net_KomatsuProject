@model IConfigManager;

@{



}

<div class="table-agile-info">
    <div class="panel panel-default">
        @*title*@
        <div class="panel-heading">
            Kayıtlı Makineler
        </div>
        @*/title*@

        @*menubar*@
        <div class="row w3-res-tb">
            <div class="col-sm-5 m-b-xs">
				<select id="slct_menubar" class="input-sm form-control w-sm inline v-middle">
					<option value="1">Seçilenleri Sil</option>
				</select>
				<button id="btn_apply" class="btn btn-sm btn-default">Uygula</button>                
            </div>
            <div class="col-sm-4">
            </div>
			@*search bar*@
            <div class="col-sm-3">
				<div class="input-group">
					<input type="text" class="input-sm form-control" placeholder="Ara">
					<span class="input-group-btn">
						<button class="btn btn-sm btn-default" type="button">
							Ara
						</button>
					</span>
				</div>
            </div>
			@*/search bar*@
        </div>
        @*/menubar*@

        @*/data*@
        <div class="table-responsive">
            <table id="tbl_user" class="table table-striped b-t b-light">
                <thead>
                    <tr>
                        <th style="width:20px;">
                            <label class="i-checks m-b-none">
								<input id="box_all" type="checkbox"><i></i>
                            </label>
                        </th>
                        <th>Marka</th>
                        <th>Ana Kategori</th>
                        <th>Alt Kategori</th>
                        <th>Model</th>
                        <th>Kullanım Durumu</th>
                        <th>Stok</th>
						<th>Kiralık</th>
						<th>Satılık</th>
						<th>Yıl</th>
                        <th>Kayıt Tarihi</th>
                        <th>İşlemler</th>
                        <th style="width:30px;"></th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
        @*/data*@

        @*/navigation*@
        <footer class="panel-footer">
            <div class="row">
                <div class="col-sm-5 text-left">
                    <small id="lbl_entityQuantity" class="text-muted inline m-t-sm m-b-s">
						<b>0</b> kullanıcı görüntüleniyor
					</small>
                </div>
                <div class="col-sm-7 text-right text-center-xs">                
                    <ul id="ul_pagination" class="pagination pagination-sm m-t-none m-b-none">
                    </ul>
                </div>
            </div>
        </footer>
        @*/navigation*@
    </div>
</div>

<script type="module" src="~/js/machineForDisplay.js"></script>

<script>
    function click_saveButton(no) {
		//#region set variables
		let oldColumnValues = JSON.parse(
			sessionStorage.getItem(`tr_row${no}`)
		);
		let columns = {
			"brandName": $(`#tr_row${no} #td_brandName`),
			"mainCategoryName": $(`#tr_row${no} #td_mainCategoryName`),
			"subCategoryName": $(`#tr_row${no} #td_subCategoryName`),
			"model": $(`#tr_row${no} #td_model`),
			"usageStatus": $(`#tr_row${no} #td_usageStatus`),
			"stock": $(`#tr_row${no} #td_stock`),
			"rented": $(`#tr_row${no} #td_rented`),
			"sold": $(`#tr_row${no} #td_sold`),
			"year": $(`#tr_row${no} #td_year`)
		};
		let subCategoryNameInStorage = oldColumnValues["subCategoryName"];
		let modelInStorage = oldColumnValues["model"];
		let data = {
			"brandName": columns["brandName"].children("#inpt_brandName").val().trim() 
				== oldColumnValues["brandName"] ?
					null 
					: columns["brandName"].children("#inpt_brandName").val().trim(),

			"subCategoryName": columns["subCategoryName"].children("#inpt_subCategoryName")
				.val().trim() == oldColumnValues["subCategoryName"] ?
					null 
					: columns["subCategoryName"].children("#inpt_subCategoryName").val().trim(),

			"model": columns["model"].children("#inpt_model").val().trim() 
				== oldColumnValues["model"] ?
					null 
					: columns["model"].children("#inpt_model").val().trim(),

			"zerothHandOrSecondHand": columns["usageStatus"].children("#inpt_usageStatus").val().trim() 
				== oldColumnValues["usageStatus"] ?
					null 
					: (columns["usageStatus"].children("#inpt_usageStatus")
						.val().trim() == "Sıfır" ? 0 : 2),

			"stock": columns["stock"].children("#inpt_stock").val().trim() 
				== oldColumnValues["stock"] ?
					null 
					: columns["stock"].children("#inpt_stock").val().trim(),

			"rented": columns["rented"].children("#inpt_rented").val().trim() 
				== oldColumnValues["rented"] ?
					null 
					: columns["rented"].children("#inpt_rented").val().trim(),

			"sold": columns["sold"].children("#inpt_sold").val().trim() 
				== oldColumnValues["sold"] ?
					null 
					: columns["sold"].children("#inpt_sold").val().trim(),

			"year": columns["year"].children("#inpt_year").val().trim() 
				== oldColumnValues["year"] ?
					null 
					: columns["year"].children("#inpt_year").val().trim()
		};
		//#endregion

		//#region when any <input> is blank (error)
		for(var columnName in columns)
			if(columns[columnName]
				.children(`#inpt_${columnName}`)  // get <input>
				.val()
				.trim() == "")
			{
				window.updateResultLabel(
					"lütfen boş bıraktığınız yerleri doldurunuz.", 
					"red", 
					`#tr_error${no} td`)
				return;
			}
		//#endregion
		
		//#region when any column not changed

		//#region count null column quantity
		let nullColumnQuantity = 0;

		for(var columnName in data){
			if(data[columnName] != null)
				break;

			nullColumnQuantity+=1;
		}
		//#endregion
		
		//#region write errorMessage
		let dataLength = Object.keys(data).length;

		if(nullColumnQuantity == dataLength){
			window.updateResultLabel(
				"herhangi Bir Değişiklik Yapılmadı", 
				"red", 
				`#tr_error${no} td`)
			return;
		}
		//#endregion

		//#endregion

		$.ajax({
			method: "PUT",
			url: `https://localhost:7091/api/services/machine/update?
				SubCategoryName=${subCategoryNameInStorage}
				&Model=${modelInStorage}`,
			data: JSON.stringify(data),
			contentType: "application/json",
			dataType: "json",
			success: () => {
				//#region convert all <input> to text
				for (var columnName in columns) {
					// remove <input>
					let column = columns[columnName];
					column.empty();

					// add <input> value as text
					column.append(
						data[columnName] ?? oldColumnValues[columnName]
					);
				}
				//#endregion

				//#region add "update" button
				// remove "save" and "cancel" buttons
				let td_processes = $(`#tr_row${no} #td_processes`);
				td_processes.empty();

				// add
				td_processes.append(
					`<button onclick="window.click_updateButton(${no})" class="active" ui-toggle-class="">
						<i class="fa fa-pencil text-info"> 
							Güncelle
						</i>
					</button>`
				);
				//#endregion

				//#region hide error message row
				$(`#tr_error${no} td`).attr("hidden", "");
				//#endregion
			},
			error: (response) => {
				window.writeErrorMessage(
					response.responseText, 
					`#tr_error${no} td`);
			}
		});
	}

	function click_cancelButton(no) {
		//#region set variables
		let row = $(`#tr_row${no}`);
		let columns = {
			"brandName": row.children("#td_brandName"),
			"mainCategoryName": row.children("#td_mainCategoryName"),
			"subCategoryName": row.children("#td_subCategoryName"),
			"model": row.children("#td_model"),
			"usageStatus": row.children("#td_usageStatus"),
			"stock": row.children("#td_stock"),
			"rented": row.children("#td_rented"),
			"sold": row.children("#td_sold"),
			"year": row.children("#td_year"),
		};
		let columnValuesInStorage = JSON.parse(
			sessionStorage.getItem(`tr_row${no}`)
		);
		//#endregion

		//#region convert all <input> to text
		for (var columnName in columns) {
			// remove <input>
			let column = columns[columnName];
			column.empty();

			// add previous value as text
			column.append(
				columnValuesInStorage[columnName]
			);
		}
		//#endregion

		//#region add "update" button
		// remove "save" and "cancel" buttons
		let td_processes = $(`#tr_row${no} #td_processes`);
		td_processes.empty();

		// hide error message label
		$(`#tr_error${no} td`).attr("hidden", "")

		// add
		td_processes.append(
			`<button onclick="window.click_updateButton(${no});" class="active" ui-toggle-class="">
				<i class="fa fa-pencil text-info"> 
					Güncelle
				</i>
			</button>`
		);
		//#endregion
	}

	function click_updateButton(no) {
		//#region set variables
		let row = $(`#tr_row${no}`);
		let columnsForAddInput = {
			"brandName": row.children("#td_brandName"),
			"model": row.children("#td_model"),
			"stock": row.children("#td_stock"),
			"rented": row.children("#td_rented"),
			"sold": row.children("#td_sold"),
			"year": row.children("#td_year"),
		};
		let columnsForAddSelect{
			"mainCategoryName": row.children("#td_mainCategoryName"),
			"subCategoryName": row.children("#td_subCategoryName"),
			"usageStatus": row.children("#td_usageStatus"),
		}
		let columnValues = {
			"brandName": columns.brandName.text(),
			"mainCategoryName": columns.mainCategoryName.text(),
			"subCategoryName": columns.subCategoryName.text(),
			"model": columns.model.text(),
			"usageStatus": columns.usageStatus.text(),
			"stock": columns.stock.text(),
			"rented": columns.rented.text(),
			"sold": columns.sold.text(),
			"year": columns.year.text(),
		}
		//#endregion

		//#region add <input> to columns (dynamic)
		for (let columnName in columnsForAddInput) {
			// add <input> to column
			let column = columnsForAddInput[columnName];
			column.empty()
			column.append(`<input id="inpt_${columnName}">`);

			// add placeholder to column
			column
				.children(`#inpt_${columnName}`)
				.val(columnValues[columnName]);
		}
		//#endregion


		


		for(let columnName in columnsForAddSelect){
			let column = columnsForAddSelect[columnName];
			
			column.empty();
			column.append(
				`<select></select>`);

			for()
		}
		
		//#region add "save" and "cancel" buttons
		// remove 'update' button
		let td_processes = row.children("#td_processes");
		td_processes.empty(); 

		// add
		td_processes.append(
			`<button onclick="window.click_saveButton(${no})"" class="active" ui-toggle-class="">
				<i class="fa fa-check text-success"> Kaydet</i>
			<button onclick="window.click_cancelButton(${no})" class="active" ui-toggle-class="">
				<i class="fa fa-times text-danger"> Vazgeç</i>`
		);
		//#endregion

		//#region save column values to sessionStorage
		sessionStorage.setItem(
			`tr_row${no}`,
			JSON.stringify(columnValues)
		);
		//#endregion
	}
</script>
